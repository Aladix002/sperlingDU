// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SperlingDU.DAL;

#nullable disable

namespace SperlingDU.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250820105518_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SperlingDU.DAL.Entities.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Placeholders")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TemplateType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Dobrý den,\n\ninformujeme Vás o konání akce <nazev_akce>\nDatum: <datum_konani>\nCena: <cena_celkem> Kč\n\nS pozdravem,\ntým VETKOM",
                            CreatedAt = new DateTime(2025, 8, 20, 10, 55, 18, 186, DateTimeKind.Utc).AddTicks(5106),
                            LastModified = new DateTime(2025, 8, 20, 10, 55, 18, 186, DateTimeKind.Utc).AddTicks(5284),
                            Name = "Notifikace o akci",
                            Placeholders = "nazev_akce,datum_konani,cena_celkem",
                            Subject = "Informace o vzdělávací akci",
                            TemplateType = "notification"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Faktura\n\nFakturujeme Vám za účast na akci <nazev_akce>\nDatum konání: <datum_konani>\nCelková cena: <cena_celkem> Kč\nLékař: <cele_jmeno_lekare>",
                            CreatedAt = new DateTime(2025, 8, 20, 10, 55, 18, 186, DateTimeKind.Utc).AddTicks(5594),
                            LastModified = new DateTime(2025, 8, 20, 10, 55, 18, 186, DateTimeKind.Utc).AddTicks(5594),
                            Name = "Faktura za akci",
                            Placeholders = "nazev_akce,datum_konani,cena_celkem,cele_jmeno_lekare",
                            Subject = "Faktura za vzdělávací akci",
                            TemplateType = "document"
                        });
                });

            modelBuilder.Entity("SperlingDU.DAL.Entities.FileAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CudPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("FileAttachments");
                });

            modelBuilder.Entity("SperlingDU.DAL.Entities.SystemSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountantEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ActionNotificationDays")
                        .HasColumnType("int");

                    b.Property<int>("CertificationExpiryThresholdDays")
                        .HasColumnType("int");

                    b.Property<int>("CpdClosureUrgencyDays")
                        .HasColumnType("int");

                    b.Property<int>("CpdClosureUrgencyPeriodDays")
                        .HasColumnType("int");

                    b.Property<int>("CpdFee")
                        .HasColumnType("int");

                    b.Property<int>("CpdYearsCount")
                        .HasColumnType("int");

                    b.Property<int>("DefaultCertificationYears")
                        .HasColumnType("int");

                    b.Property<int>("DefaultNonMemberSurcharge")
                        .HasColumnType("int");

                    b.Property<int>("DefaultStudentDiscount")
                        .HasColumnType("int");

                    b.Property<string>("InfoBox")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("InvoiceDueDays")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceSeriesIssued")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InvoiceSeriesReceived")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InvoiceSeriesSettlement")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LastActionNotificationHours")
                        .HasColumnType("int");

                    b.Property<int>("PaymentUrgencyDays")
                        .HasColumnType("int");

                    b.Property<int>("PaymentUrgencyPeriodDays")
                        .HasColumnType("int");

                    b.Property<int>("SurveyReminderDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SystemSettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountantEmail = "ekonom@vetkom.cz",
                            ActionNotificationDays = 7,
                            CertificationExpiryThresholdDays = 30,
                            CpdClosureUrgencyDays = 30,
                            CpdClosureUrgencyPeriodDays = 5,
                            CpdFee = 500,
                            CpdYearsCount = 3,
                            DefaultCertificationYears = 5,
                            DefaultNonMemberSurcharge = 30,
                            DefaultStudentDiscount = 30,
                            InfoBox = "Vítejte v systému nastavení",
                            InvoiceDueDays = 14,
                            InvoiceSeriesIssued = "324123",
                            InvoiceSeriesReceived = "124456",
                            InvoiceSeriesSettlement = "224789",
                            LastActionNotificationHours = 24,
                            PaymentUrgencyDays = 30,
                            PaymentUrgencyPeriodDays = 3,
                            SurveyReminderDays = 14
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
